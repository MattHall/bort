* In AR persistence, move state column from class level variables into the StateMachine object for the class

* allowed :to array and :on_transition callback [Kevin Triplett]

* Support enter and exit actions on states

* Use named_scope in AR persistence layer, if available [Jan De Poorter]

* Incremented version number

* Cleaned up aasm_states_for_select to return the value as a string

* Specs and bug fixes for the ActiveRecordPersistence, keeping persistence columns in sync
  Allowing for nil values in states for active record
  Only set state to default state before_validation_on_create
  New rake task to uninstall, build and reinstall the gem (useful for development)
  Changed scott's email address to protect it from spambots when publishing rdocs
  New non-(!) methods that allow for firing events without persisting [Jeff Dean]

* Added aasm_states_for_select that will return a select friendly collection of states. 

* Add some event callbacks, #aasm_event_fired(from, to), and #aasm_event_failed(event)
  Based on transition logging suggestion [Artem Vasiliev] and timestamp column suggestion [Mike Ferrier]

* Add #aasm_events_for_state and #aasm_events_for_current_state [Joao Paulo Lins]

* Ensure that a state is written for a new record even if aasm_current_state or
  {state}= are never called.

* Fix AR persistence so new records have their state set. [Joao Paulo Lins]

* Make #event! methods return a boolean [Joel Chippindale]

